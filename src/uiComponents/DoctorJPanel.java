/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package uiComponents;

import Business.EcoSystem;
import javax.swing.table.DefaultTableModel;
import Business.model.doctor.DoctorDirectory;
import Business.model.encounter.Encounter;
import Business.model.encounter.EncounterHistory;
import Business.model.hospital.HospitalDirectory;
import Business.model.patient.PatientDirectory;
import Business.model.person.PersonDirectory;
import Business.model.vitalSigns.VitalSigns;
import Business.userAccountDetails.UserAccount;

/**
 *
 * @author foram
 */
public class DoctorJPanel extends javax.swing.JPanel {
       private javax.swing.JSplitPane jSplitPane1;
    /**
     * Creates new form PatientJPanel
     */
    
    EncounterHistory encounterHistory;
    PersonDirectory personDirectory;
    PatientDirectory patientDirectory;
    HospitalDirectory hospitalDirectory;
    DoctorDirectory doctorDirectory;
    EcoSystem business;
    UserAccount account;
    VitalSigns vitalSigns;
    public DoctorJPanel(EncounterHistory encounterHistory,  PersonDirectory personDirectory,PatientDirectory patientDirectory,
    HospitalDirectory hispDirectory,javax.swing.JSplitPane jSplitPane1, DoctorDirectory doctorDirectory, VitalSigns vitalSigns) {
        initComponents();
        this.personDirectory = personDirectory;
        this.patientDirectory = patientDirectory;
        this.encounterHistory = encounterHistory;
        this.jSplitPane1 = jSplitPane1;
        this.doctorDirectory = doctorDirectory;
        this.vitalSigns = vitalSigns;
        displayEncounterHistory();
   
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        updateBtn = new javax.swing.JButton();
        createBtn = new javax.swing.JButton();
        bp = new javax.swing.JLabel();
        bpTxt = new javax.swing.JTextField();
        jScrollPane7 = new javax.swing.JScrollPane();
        tblPatientHistory1 = new javax.swing.JTable();
        bp1 = new javax.swing.JLabel();
        heartRateTxt = new javax.swing.JTextField();

        setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("ENCOUNTER DETAILS");

        updateBtn.setText("Update");
        updateBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateBtnActionPerformed(evt);
            }
        });

        createBtn.setText("Create");
        createBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createBtnActionPerformed(evt);
            }
        });

        bp.setText("BP:");

        bpTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bpTxtActionPerformed(evt);
            }
        });

        tblPatientHistory1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "PatientID", "BloodPressure", "Heart Rate", "Health Check", "Visit Date"
            }
        ));
        tblPatientHistory1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblPatientHistory1MouseClicked(evt);
            }
        });
        jScrollPane7.setViewportView(tblPatientHistory1);

        bp1.setText("HeartRate:");

        heartRateTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                heartRateTxtActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(70, 70, 70)
                        .addComponent(bp)
                        .addGap(47, 47, 47)
                        .addComponent(bpTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(53, 53, 53)
                        .addComponent(bp1)
                        .addGap(47, 47, 47)
                        .addComponent(heartRateTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(343, 343, 343)
                        .addComponent(updateBtn)
                        .addGap(64, 64, 64)
                        .addComponent(createBtn))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(336, 336, 336)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(368, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane7))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(createBtn, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE)
                    .addComponent(updateBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(bp1)
                        .addComponent(heartRateTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(bp)
                        .addComponent(bpTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(180, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    
    private void createBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createBtnActionPerformed
        // TODO add your handling code here:
        ViewJPanel viewPane = new ViewJPanel(jSplitPane1, account, business, personDirectory, patientDirectory, encounterHistory, doctorDirectory,hospitalDirectory, vitalSigns);
        jSplitPane1.setRightComponent(viewPane);
    }//GEN-LAST:event_createBtnActionPerformed

    private void updateBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateBtnActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = tblPatientHistory1.getSelectedRow();
        DefaultTableModel model = (DefaultTableModel) tblPatientHistory1.getModel();
        
        model.setValueAt(bpTxt.getText(), selectedRowIndex, 1);
        model.setValueAt(heartRateTxt.getText(), selectedRowIndex, 2);
        
    }//GEN-LAST:event_updateBtnActionPerformed

    private void bpTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bpTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_bpTxtActionPerformed

    private void heartRateTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_heartRateTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_heartRateTxtActionPerformed

    private void tblPatientHistory1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblPatientHistory1MouseClicked
        // TODO add your handling code here:
        int selectedRowIndex = tblPatientHistory1.getSelectedRow();

        Encounter selectEncounter = encounterHistory.getListOfEncounter().get(selectedRowIndex);

        bpTxt.setText(String.valueOf(selectEncounter.getVitalSigns().getBloodPressure()));
        heartRateTxt.setText(String.valueOf(selectEncounter.getVitalSigns().getHeartRate()));
    }//GEN-LAST:event_tblPatientHistory1MouseClicked


    private void displayEncounterHistory(){
     
        DefaultTableModel model = (DefaultTableModel) tblPatientHistory1.getModel();
        model.setRowCount(0);
        for(Encounter encounter: encounterHistory.getListOfEncounter()){
            Object[]row = new Object[10];
            row[0] = encounter.getPatientID();
            row[1] = encounter.getVitalSigns().getBloodPressure();
            row[2] = encounter.getVitalSigns().getHeartRate();
            row[3] = encounter.isIsStable() ? "Healthy" : "Not Healthy";
            row[4] = encounter.getDateOfVisit();
            model.addRow(row);
        }
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel bp;
    private javax.swing.JLabel bp1;
    private javax.swing.JTextField bpTxt;
    private javax.swing.JButton createBtn;
    private javax.swing.JTextField heartRateTxt;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JTable tblPatientHistory1;
    private javax.swing.JButton updateBtn;
    // End of variables declaration//GEN-END:variables
}
