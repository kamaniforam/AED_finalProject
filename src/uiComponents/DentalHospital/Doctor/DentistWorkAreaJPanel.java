/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package uiComponents.DentalHospital.Doctor;

import Business.EcoSystem;
import Business.WorkQueue.DoctorAvailableSlotWR;
import Business.WorkQueue.WorkQueue;
import Business.WorkQueue.WorkRequest;
import Utils.Config;
import Utils.EmailUtility;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author richajain
 */
public class DentistWorkAreaJPanel extends javax.swing.JPanel {

    private EcoSystem ecosystem;
    private javax.swing.JSplitPane jSplitPane1;
    /**
     * Creates new form DentistWorkAreaJPanel
     */
    public DentistWorkAreaJPanel(EcoSystem ecosystem) {
        initComponents();
        
        this.ecosystem = EcoSystem.getInstance();
        
        populatePendingAppointmentsTable();
        populateCompletedAppointmentsTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        pendingAppointmentsTable = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        completedAppointmensTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        viewAppointment = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        pendingAppointmentsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Patient's Name", "Date/Time", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(pendingAppointmentsTable);

        completedAppointmensTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Patient's Name", "Disease", "Date/Time", "Prescription"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(completedAppointmensTable);

        jLabel1.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Pending Appointments");

        jButton1.setBackground(new java.awt.Color(51, 153, 255));
        jButton1.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        jButton1.setText("Reject Appointment");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rejectAppointmentActionPerformed(evt);
            }
        });

        viewAppointment.setBackground(new java.awt.Color(51, 153, 255));
        viewAppointment.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        viewAppointment.setText("View Appointment");
        viewAppointment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewAppointmentActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Completed Appointments");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(240, 240, 240))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(169, 169, 169)
                        .addComponent(viewAppointment)
                        .addGap(47, 47, 47)
                        .addComponent(jButton1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(245, 245, 245)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 659, Short.MAX_VALUE)
                            .addComponent(jScrollPane1))))
                .addContainerGap(29, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jButton1, viewAppointment});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(viewAppointment, javax.swing.GroupLayout.DEFAULT_SIZE, 39, Short.MAX_VALUE)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, Short.MAX_VALUE)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(75, 75, 75))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void rejectAppointmentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rejectAppointmentActionPerformed
        // TODO add your handling code here:
        
        int selectedRow = pendingAppointmentsTable.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please Select a Row");
            return;
        }
        String name = pendingAppointmentsTable.getValueAt(selectedRow, 0).toString();
        if (pendingAppointmentsTable.getValueAt(selectedRow, 2) == "Completed") {
            JOptionPane.showMessageDialog(null, "This request is already completed");
            return ;
          
        }
        if (pendingAppointmentsTable.getValueAt(selectedRow, 2) == "Requested") {
           DoctorAvailableSlotWR req = (DoctorAvailableSlotWR) pendingAppointmentsTable.getValueAt(selectedRow, 0);
           req.setStatus("Rejected");
           String subject = "Appointment Status";
           String body = "Hey " + ",\n Your appointment is canceled due to some reasons" ;
           EmailUtility.sendEmail(subject, Config.emailId, Config.password, body, new String[]{req.getEmail()});
        }
        
        populateCompletedAppointmentsTable();
        populatePendingAppointmentsTable();
    }//GEN-LAST:event_rejectAppointmentActionPerformed

    private void viewAppointmentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewAppointmentActionPerformed
        // TODO add your handling code here:
        int selectedRow = pendingAppointmentsTable.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please Select a Row");
            return;
        }
        String name = pendingAppointmentsTable.getValueAt(selectedRow, 0).toString();
        if (pendingAppointmentsTable.getValueAt(selectedRow, 2) == "Completed") {
            JOptionPane.showMessageDialog(null, "This request is already completed");
            return ;
          
        }
        if (pendingAppointmentsTable.getValueAt(selectedRow, 2) == "Requested") {
           DoctorAvailableSlotWR req = (DoctorAvailableSlotWR) pendingAppointmentsTable.getValueAt(selectedRow, 0);
           req.setStatus("Completed");
           
           String subject = "Appointment Status";
           String body = "Hey " + ",\n Your appointment is completed" ;
           EmailUtility.sendEmail(subject, Config.emailId, Config.password, body, new String[]{req.getEmail()});
        
        }
        
        populateCompletedAppointmentsTable();
        populatePendingAppointmentsTable();
        
    }//GEN-LAST:event_viewAppointmentActionPerformed

    private void populatePendingAppointmentsTable() {
        
        DefaultTableModel dtm = (DefaultTableModel) pendingAppointmentsTable.getModel();
	
        dtm.setRowCount(0);
        for (WorkRequest wr :  ecosystem.getWorkQueue().getWorkRequestList()) {
            Object row[] = new Object[3];
            if(wr instanceof DoctorAvailableSlotWR && 
                    ("Pending".equals(wr.getStatus()) || "Requested".equals(wr.getStatus()))){
                row[0] = ((DoctorAvailableSlotWR) wr);
                row[1] = ((DoctorAvailableSlotWR) wr).getTimings();
                row[2] = wr.getStatus();
                dtm.addRow(row);
            }
        }
    }
    
    private void populateCompletedAppointmentsTable() {
        
        DefaultTableModel dtm = (DefaultTableModel) completedAppointmensTable.getModel();
	
        dtm.setRowCount(0);
        //System.out.println("HIII " + ecosystem.getWorkQueue().getWorkRequestList().size());
        for (WorkRequest wr :  ecosystem.getWorkQueue().getWorkRequestList()) {
            Object row[] = new Object[3];
            System.out.println(wr.getStatus());
            if(wr instanceof DoctorAvailableSlotWR && 
                    ("Completed".equals(wr.getStatus()) || "Rejected".equalsIgnoreCase(wr.getStatus()))){
                row[0] = ((DoctorAvailableSlotWR) wr);
                row[1] = ((DoctorAvailableSlotWR) wr).getTimings();
                row[2] = wr.getStatus();
                dtm.addRow(row);
            }
        }
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable completedAppointmensTable;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable pendingAppointmentsTable;
    private javax.swing.JButton viewAppointment;
    // End of variables declaration//GEN-END:variables
}
