/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package uiComponents;

import java.awt.Image;
import java.io.File;
import java.time.LocalDateTime;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;
import model.Doctor;
import model.DoctorDirectory;
import model.Encounter;
import model.EncounterHistory;
import model.Hospital;
import model.HospitalDirectory;
import model.House;
import model.Patient;
import model.PatientDirectory;
import model.Person;
import model.PersonDirectory;
import model.VitalSigns;

/**
 *
 * @author foram
 */
public class HospitalAdminJPanel extends javax.swing.JPanel {
    private javax.swing.JSplitPane jSplitPane1;
    /**
     * Creates new form HospitalAdminJPanel
     */
    PersonDirectory personDirectory;
    PatientDirectory patientDirectory;
    EncounterHistory encounterHistory;
    DoctorDirectory doctorDirectory;
    HospitalDirectory hospitalDirectory;
    
    public HospitalAdminJPanel(PersonDirectory personDirectory, PatientDirectory patientDirectory, EncounterHistory encounterHistory, DoctorDirectory doctorDirectory, HospitalDirectory hospitalDirectory, javax.swing.JSplitPane jSplitPane1) {
        initComponents();
        this.personDirectory = personDirectory;
        this.patientDirectory = patientDirectory;
        this.encounterHistory = encounterHistory;
        this.doctorDirectory = doctorDirectory;
        this.hospitalDirectory = hospitalDirectory;
        this.jSplitPane1 = jSplitPane1;
        
        displayPatientTableDetails();
        displayPersonTableDetails();
        displayDoctorTableDetails();
        displayEncounterHistory();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        hospitalPanel = new javax.swing.JPanel();
        doctorPanel1 = new javax.swing.JPanel();
        hospitalPortalLbl = new javax.swing.JLabel();
        HospitalnameLbl = new javax.swing.JLabel();
        hospitalLbl1 = new javax.swing.JLabel();
        cityLbl = new javax.swing.JLabel();
        create2 = new javax.swing.JButton();
        update2 = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        hospitalTable = new javax.swing.JTable();
        ddCity1 = new javax.swing.JComboBox<>();
        ddCommunity1 = new javax.swing.JComboBox<>();
        hospitalDropdown1 = new javax.swing.JComboBox<>();
        clear2 = new javax.swing.JButton();
        encounterPanel = new javax.swing.JPanel();
        updateBtn1 = new javax.swing.JButton();
        createBtn = new javax.swing.JButton();
        bpTxt = new javax.swing.JTextField();
        bp = new javax.swing.JLabel();
        jScrollPane7 = new javax.swing.JScrollPane();
        tblPatientHistory = new javax.swing.JTable();
        bp1 = new javax.swing.JLabel();
        heartRateTxt1 = new javax.swing.JTextField();
        doctorPanel = new javax.swing.JPanel();
        addDocLbl = new javax.swing.JLabel();
        doctorNameLbl = new javax.swing.JLabel();
        doctorName = new javax.swing.JTextField();
        hospitalDropdown = new javax.swing.JComboBox<>();
        hospitalLbl = new javax.swing.JLabel();
        createDoctorBtn = new javax.swing.JButton();
        updateBtn = new javax.swing.JButton();
        jScrollPane5 = new javax.swing.JScrollPane();
        tblDoctor = new javax.swing.JTable();
        clear1 = new javax.swing.JButton();
        hospitalLbl2 = new javax.swing.JLabel();
        ddCommunity2 = new javax.swing.JComboBox<>();
        cityLbl1 = new javax.swing.JLabel();
        ddCity2 = new javax.swing.JComboBox<>();
        uploadPhoto = new javax.swing.JLabel();
        displayPhoto = new javax.swing.JButton();
        patientPanel = new javax.swing.JPanel();
        lblCommunity = new javax.swing.JLabel();
        ddHouseNumber = new javax.swing.JComboBox<>();
        lblAddress = new javax.swing.JLabel();
        ddCommunity = new javax.swing.JComboBox<>();
        ddCity = new javax.swing.JComboBox<>();
        lblAge = new javax.swing.JLabel();
        txtZipCode = new javax.swing.JTextField();
        lblName = new javax.swing.JLabel();
        txtAddress = new javax.swing.JTextField();
        txtName = new javax.swing.JTextField();
        txtAge = new javax.swing.JTextField();
        lblHouseNumber = new javax.swing.JLabel();
        lblZipCode = new javax.swing.JLabel();
        lblCity = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        create1 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        patientTbl = new javax.swing.JTable();
        update1 = new javax.swing.JButton();
        lblBloodPressure = new javax.swing.JLabel();
        txtBloodPressure = new javax.swing.JTextField();
        btnCheck = new javax.swing.JButton();
        jScrollPane6 = new javax.swing.JScrollPane();
        tblPerson = new javax.swing.JTable();
        clear = new javax.swing.JButton();
        heartRateLbl = new javax.swing.JLabel();
        heartRateTxt = new javax.swing.JTextField();
        displayPhoto1 = new javax.swing.JButton();
        uploadPhoto1 = new javax.swing.JLabel();

        jTabbedPane1.setBackground(new java.awt.Color(204, 204, 255));

        hospitalPanel.setForeground(new java.awt.Color(204, 204, 255));

        doctorPanel1.setBackground(new java.awt.Color(204, 204, 255));

        hospitalPortalLbl.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        hospitalPortalLbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        hospitalPortalLbl.setText("Hospital Portal");

        HospitalnameLbl.setText("Hospital Name:");

        hospitalLbl1.setText("Community:");

        cityLbl.setText("City:");

        create2.setText("Create");
        create2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                create2ActionPerformed(evt);
            }
        });

        update2.setText("Update");
        update2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                update2ActionPerformed(evt);
            }
        });

        hospitalTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Hospital Id", "Hospital Name", "Community", "City"
            }
        ));
        hospitalTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                hospitalTableMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(hospitalTable);

        ddCity1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Choose a City", "Boston", "Newyork", "California" }));
        ddCity1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ddCity1ActionPerformed(evt);
            }
        });

        ddCommunity1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Choose a Community", "Boylston", "MissionMain", "MissionHill" }));
        ddCommunity1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ddCommunity1ActionPerformed(evt);
            }
        });

        hospitalDropdown1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Choose Hospital", "Hospital A", "Hospital B", "Hospital C", "Hospital D" }));
        hospitalDropdown1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hospitalDropdown1ActionPerformed(evt);
            }
        });

        clear2.setText("Clear");
        clear2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clear2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout doctorPanel1Layout = new javax.swing.GroupLayout(doctorPanel1);
        doctorPanel1.setLayout(doctorPanel1Layout);
        doctorPanel1Layout.setHorizontalGroup(
            doctorPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(doctorPanel1Layout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addGroup(doctorPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane4)
                    .addGroup(doctorPanel1Layout.createSequentialGroup()
                        .addComponent(HospitalnameLbl)
                        .addGap(63, 63, 63)
                        .addComponent(hospitalDropdown1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(89, 89, 89)
                        .addGroup(doctorPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(hospitalLbl1)
                            .addComponent(cityLbl))
                        .addGap(64, 64, 64)
                        .addGroup(doctorPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(ddCommunity1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(ddCity1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(0, 279, Short.MAX_VALUE)))
                .addGap(50, 50, 50))
            .addGroup(doctorPanel1Layout.createSequentialGroup()
                .addGroup(doctorPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(doctorPanel1Layout.createSequentialGroup()
                        .addGap(386, 386, 386)
                        .addComponent(hospitalPortalLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(doctorPanel1Layout.createSequentialGroup()
                        .addGap(272, 272, 272)
                        .addComponent(create2, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(53, 53, 53)
                        .addComponent(update2, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(33, 33, 33)
                        .addComponent(clear2, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        doctorPanel1Layout.setVerticalGroup(
            doctorPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(doctorPanel1Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(hospitalPortalLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addGroup(doctorPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(hospitalLbl1)
                    .addComponent(ddCommunity1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(hospitalDropdown1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(HospitalnameLbl))
                .addGap(18, 18, 18)
                .addGroup(doctorPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cityLbl)
                    .addComponent(ddCity1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(47, 47, 47)
                .addGroup(doctorPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(create2)
                    .addComponent(update2)
                    .addComponent(clear2))
                .addContainerGap(234, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout hospitalPanelLayout = new javax.swing.GroupLayout(hospitalPanel);
        hospitalPanel.setLayout(hospitalPanelLayout);
        hospitalPanelLayout.setHorizontalGroup(
            hospitalPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1044, Short.MAX_VALUE)
            .addGroup(hospitalPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(doctorPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        hospitalPanelLayout.setVerticalGroup(
            hospitalPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 624, Short.MAX_VALUE)
            .addGroup(hospitalPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(hospitalPanelLayout.createSequentialGroup()
                    .addComponent(doctorPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addContainerGap()))
        );

        jTabbedPane1.addTab("Hospital", hospitalPanel);

        encounterPanel.setBackground(new java.awt.Color(204, 204, 255));

        updateBtn1.setText("Update");
        updateBtn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateBtn1ActionPerformed(evt);
            }
        });

        createBtn.setText("Create");
        createBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createBtnActionPerformed(evt);
            }
        });

        bpTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bpTxtActionPerformed(evt);
            }
        });

        bp.setText("BP:");

        tblPatientHistory.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "PatientID", "BloodPressure", "Heart Rate", "Health Check", "Visit Date"
            }
        ));
        tblPatientHistory.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblPatientHistoryMouseClicked(evt);
            }
        });
        jScrollPane7.setViewportView(tblPatientHistory);

        bp1.setText("HeartRate:");

        heartRateTxt1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                heartRateTxt1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout encounterPanelLayout = new javax.swing.GroupLayout(encounterPanel);
        encounterPanel.setLayout(encounterPanelLayout);
        encounterPanelLayout.setHorizontalGroup(
            encounterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane7, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 1044, Short.MAX_VALUE)
            .addGroup(encounterPanelLayout.createSequentialGroup()
                .addGroup(encounterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(encounterPanelLayout.createSequentialGroup()
                        .addGap(37, 37, 37)
                        .addComponent(bp)
                        .addGap(47, 47, 47)
                        .addComponent(bpTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(63, 63, 63)
                        .addComponent(bp1, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(36, 36, 36)
                        .addComponent(heartRateTxt1, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(encounterPanelLayout.createSequentialGroup()
                        .addGap(367, 367, 367)
                        .addComponent(updateBtn1, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(67, 67, 67)
                        .addComponent(createBtn)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        encounterPanelLayout.setVerticalGroup(
            encounterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(encounterPanelLayout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addGroup(encounterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(updateBtn1)
                    .addComponent(createBtn))
                .addGap(47, 47, 47)
                .addGroup(encounterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(encounterPanelLayout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(bp1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(encounterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(bp)
                        .addComponent(bpTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(heartRateTxt1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(380, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Encounter", encounterPanel);

        doctorPanel.setBackground(new java.awt.Color(204, 204, 255));

        addDocLbl.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        addDocLbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        addDocLbl.setText("ADD DOCTOR");

        doctorNameLbl.setText("Doctor Name:");

        doctorName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                doctorNameActionPerformed(evt);
            }
        });

        hospitalDropdown.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Choose Hospital", "Hospital A", "Hospital B", "Hospital C", "Hospital D" }));
        hospitalDropdown.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hospitalDropdownActionPerformed(evt);
            }
        });

        hospitalLbl.setText("Hospital");

        createDoctorBtn.setText("Create");
        createDoctorBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createDoctorBtnActionPerformed(evt);
            }
        });

        updateBtn.setText("Update");
        updateBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateBtnActionPerformed(evt);
            }
        });

        tblDoctor.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Doctor Id", "Doctor Name", "Hospital", "Community", "City"
            }
        ));
        tblDoctor.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblDoctorMouseClicked(evt);
            }
        });
        jScrollPane5.setViewportView(tblDoctor);

        clear1.setText("Clear");
        clear1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clear1ActionPerformed(evt);
            }
        });

        hospitalLbl2.setText("Community:");

        ddCommunity2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Choose a Community", "Boylston", "MissionMain", "MissionHill" }));
        ddCommunity2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ddCommunity2ActionPerformed(evt);
            }
        });

        cityLbl1.setText("City:");

        ddCity2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Choose a City", "Boston", "Newyork", "California" }));
        ddCity2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ddCity2ActionPerformed(evt);
            }
        });

        uploadPhoto.setForeground(new java.awt.Color(255, 255, 255));
        uploadPhoto.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED, new java.awt.Color(153, 153, 153), null));

        displayPhoto.setText("UPLOAD PHOTO");
        displayPhoto.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED, new java.awt.Color(153, 153, 153), new java.awt.Color(153, 153, 153)));
        displayPhoto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                displayPhotoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout doctorPanelLayout = new javax.swing.GroupLayout(doctorPanel);
        doctorPanel.setLayout(doctorPanelLayout);
        doctorPanelLayout.setHorizontalGroup(
            doctorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, doctorPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane5)
                .addGap(97, 97, 97))
            .addGroup(doctorPanelLayout.createSequentialGroup()
                .addGroup(doctorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(doctorPanelLayout.createSequentialGroup()
                        .addGap(39, 39, 39)
                        .addGroup(doctorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(doctorPanelLayout.createSequentialGroup()
                                .addGroup(doctorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(doctorNameLbl)
                                    .addComponent(hospitalLbl))
                                .addGap(89, 89, 89)
                                .addComponent(hospitalDropdown, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(doctorPanelLayout.createSequentialGroup()
                                .addGap(169, 169, 169)
                                .addComponent(doctorName, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(58, 58, 58)
                        .addGroup(doctorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(hospitalLbl2)
                            .addComponent(cityLbl1))
                        .addGap(64, 64, 64)
                        .addGroup(doctorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(ddCommunity2, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(ddCity2, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(77, 77, 77)
                        .addGroup(doctorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(doctorPanelLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 1, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(displayPhoto, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(uploadPhoto, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(doctorPanelLayout.createSequentialGroup()
                        .addGap(381, 381, 381)
                        .addComponent(addDocLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(doctorPanelLayout.createSequentialGroup()
                        .addGap(219, 219, 219)
                        .addComponent(createDoctorBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 26, 26)
                        .addComponent(updateBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(27, 27, 27)
                        .addComponent(clear1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(119, Short.MAX_VALUE))
        );
        doctorPanelLayout.setVerticalGroup(
            doctorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(doctorPanelLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(addDocLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(7, 7, 7)
                .addGroup(doctorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(doctorPanelLayout.createSequentialGroup()
                        .addGroup(doctorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(doctorNameLbl)
                            .addComponent(doctorName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(doctorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(hospitalLbl)
                            .addComponent(hospitalDropdown, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(doctorPanelLayout.createSequentialGroup()
                        .addGroup(doctorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(hospitalLbl2)
                            .addComponent(ddCommunity2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(doctorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cityLbl1)
                            .addComponent(ddCity2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(doctorPanelLayout.createSequentialGroup()
                        .addComponent(uploadPhoto, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(displayPhoto, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 48, Short.MAX_VALUE)
                .addGroup(doctorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(clear1, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(updateBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(createDoctorBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(80, 80, 80))
        );

        jTabbedPane1.addTab("Doctor", doctorPanel);

        patientPanel.setBackground(new java.awt.Color(204, 204, 255));

        lblCommunity.setText("Community:");

        ddHouseNumber.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Choose House Number", "1", "2", "3", "4", "5", "6" }));

        lblAddress.setText("Address:");

        ddCommunity.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Choose a Community", "Boylston", "MissionMain", "MissionHill" }));
        ddCommunity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ddCommunityActionPerformed(evt);
            }
        });

        ddCity.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Choose a City", "Boston", "Newyork", "California" }));
        ddCity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ddCityActionPerformed(evt);
            }
        });

        lblAge.setText("Age:");

        txtZipCode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtZipCodeActionPerformed(evt);
            }
        });

        lblName.setText("Name:");

        txtAddress.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtAddressActionPerformed(evt);
            }
        });

        txtName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNameActionPerformed(evt);
            }
        });

        lblHouseNumber.setText("House Number:");

        lblZipCode.setText("ZipCode:");

        lblCity.setText("City:");

        jLabel1.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("PATIENT PORTAL");

        create1.setText("Create");
        create1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                create1ActionPerformed(evt);
            }
        });

        patientTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "PatientID", "Name", "Age", "City", "Community", "ID", "House No", "Address", "Zip Code"
            }
        ));
        jScrollPane2.setViewportView(patientTbl);

        update1.setText("Update");
        update1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                update1ActionPerformed(evt);
            }
        });

        lblBloodPressure.setText("Blood Pressure:");

        btnCheck.setText("Check");
        btnCheck.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCheckActionPerformed(evt);
            }
        });

        tblPerson.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Name", "Age", "City", "Community", "ID", "Apartment Number", "Address", "Zip Code"
            }
        ));
        tblPerson.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblPersonMouseClicked(evt);
            }
        });
        jScrollPane6.setViewportView(tblPerson);

        clear.setText("Clear");
        clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearActionPerformed(evt);
            }
        });

        heartRateLbl.setText("Heart Rate:");

        heartRateTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                heartRateTxtActionPerformed(evt);
            }
        });

        displayPhoto1.setText("UPLOAD PHOTO");
        displayPhoto1.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED, new java.awt.Color(153, 153, 153), new java.awt.Color(153, 153, 153)));
        displayPhoto1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                displayPhoto1ActionPerformed(evt);
            }
        });

        uploadPhoto1.setForeground(new java.awt.Color(255, 255, 255));
        uploadPhoto1.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED, new java.awt.Color(153, 153, 153), null));

        javax.swing.GroupLayout patientPanelLayout = new javax.swing.GroupLayout(patientPanel);
        patientPanel.setLayout(patientPanelLayout);
        patientPanelLayout.setHorizontalGroup(
            patientPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(patientPanelLayout.createSequentialGroup()
                .addGap(358, 358, 358)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(patientPanelLayout.createSequentialGroup()
                .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 1037, Short.MAX_VALUE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(patientPanelLayout.createSequentialGroup()
                .addGroup(patientPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(patientPanelLayout.createSequentialGroup()
                        .addGap(7, 7, 7)
                        .addGroup(patientPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(patientPanelLayout.createSequentialGroup()
                                .addGroup(patientPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblZipCode)
                                    .addComponent(lblName))
                                .addGap(28, 28, 28)
                                .addGroup(patientPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtZipCode, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(patientPanelLayout.createSequentialGroup()
                                .addComponent(lblCommunity)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(ddCommunity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(90, 90, 90)
                        .addGroup(patientPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(patientPanelLayout.createSequentialGroup()
                                .addGroup(patientPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(patientPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addGroup(patientPanelLayout.createSequentialGroup()
                                            .addComponent(lblCity)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(ddCity, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, patientPanelLayout.createSequentialGroup()
                                            .addComponent(lblAge)
                                            .addGap(83, 83, 83)
                                            .addGroup(patientPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(txtAge, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(txtAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                    .addComponent(lblAddress))
                                .addGap(41, 41, 41)
                                .addGroup(patientPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblBloodPressure)
                                    .addComponent(heartRateLbl))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(patientPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(heartRateTxt, javax.swing.GroupLayout.DEFAULT_SIZE, 101, Short.MAX_VALUE)
                                    .addComponent(txtBloodPressure)))
                            .addGroup(patientPanelLayout.createSequentialGroup()
                                .addComponent(lblHouseNumber)
                                .addGap(18, 18, 18)
                                .addComponent(ddHouseNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(104, 104, 104)
                                .addComponent(btnCheck))))
                    .addGroup(patientPanelLayout.createSequentialGroup()
                        .addGap(229, 229, 229)
                        .addComponent(create1, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(62, 62, 62)
                        .addComponent(update1, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(64, 64, 64)
                        .addComponent(clear, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(patientPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(patientPanelLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 1, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(displayPhoto1, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(uploadPhoto1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(16, 16, 16))
            .addGroup(patientPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2))
        );
        patientPanelLayout.setVerticalGroup(
            patientPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, patientPanelLayout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(patientPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(patientPanelLayout.createSequentialGroup()
                        .addGroup(patientPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblAge)
                            .addComponent(txtAge, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblName)
                            .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(heartRateLbl)
                            .addComponent(heartRateTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(patientPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblAddress)
                            .addComponent(txtAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblZipCode)
                            .addComponent(txtZipCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblBloodPressure)
                            .addComponent(txtBloodPressure, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(patientPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnCheck)
                            .addComponent(lblCommunity)
                            .addComponent(ddCommunity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblHouseNumber)
                            .addComponent(ddHouseNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(patientPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblCity)
                            .addComponent(ddCity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(patientPanelLayout.createSequentialGroup()
                        .addComponent(uploadPhoto1, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(patientPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(displayPhoto1, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(create1, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(update1, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(clear, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(53, 53, 53)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(38, 38, 38))
        );

        jTabbedPane1.addTab("Patient", patientPanel);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void create2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_create2ActionPerformed
        // TODO add your handling code here:
        Hospital hospital = hospitalDirectory.addNewHospital();

        hospital.setHospitalId(getUniqueIdHospital());
        hospital.setCommunity(ddCommunity1.getSelectedItem().toString());
        hospital.setCity(ddCity1.getSelectedItem().toString());
        hospital.setHospitalName(hospitalDropdown1.getSelectedItem().toString());

        JOptionPane.showMessageDialog(this, "Hospital Added");

        displayHospitalTableDetails();

        ddCommunity1.setSelectedIndex(0);
        ddCity1.setSelectedIndex(0);
        hospitalDropdown1.setSelectedIndex(0);
    }//GEN-LAST:event_create2ActionPerformed

    private void update2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_update2ActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = hospitalTable.getSelectedRow();
        DefaultTableModel model = (DefaultTableModel) hospitalTable.getModel();
        model.setValueAt(hospitalDropdown1.getSelectedItem().toString(), selectedRowIndex, 1);
        model.setValueAt(ddCommunity1.getSelectedItem().toString(), selectedRowIndex, 2);
        model.setValueAt(ddCity1.getSelectedItem().toString(), selectedRowIndex, 3);
    }//GEN-LAST:event_update2ActionPerformed

    private void hospitalTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_hospitalTableMouseClicked
        // TODO add your handling code here:

        int selectedRowIndex = hospitalTable.getSelectedRow();
        Hospital selectHospital = hospitalDirectory.getListOfHospital().get(selectedRowIndex);

        ddCity1.setSelectedItem(selectHospital.getCity());
        ddCommunity1.setSelectedItem(selectHospital.getCommunity());
        hospitalDropdown1.setSelectedItem(selectHospital.getHospitalName());
    }//GEN-LAST:event_hospitalTableMouseClicked

    private void ddCity1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ddCity1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ddCity1ActionPerformed

    private void ddCommunity1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ddCommunity1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ddCommunity1ActionPerformed

    private void hospitalDropdown1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hospitalDropdown1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_hospitalDropdown1ActionPerformed

    private void clear2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clear2ActionPerformed
        // TODO add your handling code here:
        ddCommunity1.setSelectedIndex(0);
        ddCity1.setSelectedIndex(0);
        hospitalDropdown1.setSelectedIndex(0);
    }//GEN-LAST:event_clear2ActionPerformed

    private void doctorNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_doctorNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_doctorNameActionPerformed

    private void hospitalDropdownActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hospitalDropdownActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_hospitalDropdownActionPerformed

    private void createDoctorBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createDoctorBtnActionPerformed
        // TODO add your handling code here:

        String name = doctorName.getText();
        String hospitalname = hospitalDropdown.getSelectedItem().toString();
        String hospitalCiy = ddCity2.getSelectedItem().toString();
        String hospitalCommunity = ddCommunity2.getSelectedItem().toString();
        if (name.length() == 0 ) {
            JOptionPane.showMessageDialog(this, "Doctor Profile Saved");
        } else {
            Doctor doc = doctorDirectory.addNewDoctor();
            Hospital hospital = new Hospital();
            ImageIcon dp = (ImageIcon) uploadPhoto.getIcon();
            
            doc.setDoctorId(getUniqueIdDoctor());
            doc.setDoctorName(name);
            hospital.setHospitalId(getUniqueIdHospital());
            hospital.setHospitalName(hospitalname);
            hospital.setCommunity(hospitalCommunity);
            hospital.setCity(hospitalCiy);
            doc.setHospital(hospital);
            doc.setUploadPhoto(dp);
            JOptionPane.showMessageDialog(this, "Doctor Profile Saved");

            displayDoctorTableDetails();
        }

        doctorName.setText("");
        ddCommunity2.setSelectedIndex(0);
        ddCity2.setSelectedIndex(0);
        hospitalDropdown.setSelectedIndex(0);
    }//GEN-LAST:event_createDoctorBtnActionPerformed

    private void updateBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateBtnActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = tblDoctor.getSelectedRow();
        DefaultTableModel model = (DefaultTableModel) tblDoctor.getModel();
        model.setValueAt(doctorName.getText(), selectedRowIndex, 1);
        model.setValueAt(hospitalDropdown.getSelectedItem(), selectedRowIndex, 2);
        model.setValueAt(ddCity2.getSelectedItem(), selectedRowIndex, 3);
        model.setValueAt(ddCommunity2.getSelectedItem(), selectedRowIndex, 4);
    }//GEN-LAST:event_updateBtnActionPerformed

    private void tblDoctorMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblDoctorMouseClicked
        // TODO add your handling code here:

        int selectedRowIndex = tblDoctor.getSelectedRow();
        Doctor selectDoctor = doctorDirectory.getListOfDoctors().get(selectedRowIndex);

        doctorName.setText(selectDoctor.getDoctorName());
        hospitalDropdown.setSelectedItem(selectDoctor.getHospital().getHospitalName());
        ddCommunity2.setSelectedItem(selectDoctor.getHospital().getCommunity());
        ddCity2.setSelectedItem(selectDoctor.getHospital().getCity());
    }//GEN-LAST:event_tblDoctorMouseClicked

    private void clear1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clear1ActionPerformed
        // TODO add your handling code here:
        doctorName.setText("");
        ddCommunity2.setSelectedIndex(0);
        ddCity2.setSelectedIndex(0);
        hospitalDropdown.setSelectedIndex(0);
    }//GEN-LAST:event_clear1ActionPerformed

    private void ddCommunityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ddCommunityActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ddCommunityActionPerformed

    private void ddCityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ddCityActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ddCityActionPerformed

    private void txtZipCodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtZipCodeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtZipCodeActionPerformed

    private void txtAddressActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtAddressActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtAddressActionPerformed

    private void txtNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNameActionPerformed

    private void create1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_create1ActionPerformed
        // TODO add your handling code here:

        //Save Patient Profile --> System Admin
        if (txtAddress.getText().isEmpty() || txtAge.getText().isEmpty()
            || txtZipCode.getText().isEmpty() || ddCity.getSelectedItem() == null
            || ddCommunity.getSelectedItem() == null || ddHouseNumber.getSelectedItem() == null) {
            JOptionPane.showMessageDialog(null, "All fields are Mandatory");
        } else {

            Person person = personDirectory.addNewPerson();
            House house = new House();

            person.setIdOfPerson(getUniqueIdPerson());
            person.setAgeOfPerson(Integer.parseInt(txtAge.getText()));
            person.setNameOfPerson(txtName.getText());

            house.setStreetName(txtAddress.getText());
            house.setApartmentNumber(ddHouseNumber.getSelectedItem().toString());
            house.setNameOfCity(ddCity.getSelectedItem().toString());
            house.setNameOfCommunity(ddCommunity.getSelectedItem().toString());
            house.setZipCode(Integer.parseInt(txtZipCode.getText()));

            person.setHouse(house);
            JOptionPane.showMessageDialog(this, "Profile Saved");

            displayPatientTableDetails();
            displayPersonTableDetails();
        }

        txtAge.setText("");
        txtName.setText("");
        txtAddress.setText("");
        txtZipCode.setText("");
        ddHouseNumber.setSelectedIndex(0);
        ddCommunity.setSelectedIndex(0);
        ddCity.setSelectedIndex(0);
    }//GEN-LAST:event_create1ActionPerformed

    private int getUniqueIdPerson() {
        
        int randomPIN = (int)(Math.random()*90000)+10000;
        for(Person person : personDirectory.getListOfPerson()){
            if(person.getIdOfPerson()== randomPIN){
            getUniqueIdPerson();
            }
        }
        return randomPIN;
    }
    
    private void update1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_update1ActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = tblPerson.getSelectedRow();
        DefaultTableModel model = (DefaultTableModel) tblPerson.getModel();
        model.setValueAt(txtName.getText(), selectedRowIndex, 0);
        model.setValueAt(txtAge.getText(), selectedRowIndex, 1);
        model.setValueAt(ddCity.getSelectedItem(), selectedRowIndex, 2);
        model.setValueAt(ddCommunity.getSelectedItem(), selectedRowIndex, 3);
        model.setValueAt(ddHouseNumber.getSelectedItem(), selectedRowIndex, 5);
        model.setValueAt(txtAddress.getText(), selectedRowIndex, 6);
        model.setValueAt(txtZipCode.getText(), selectedRowIndex, 7);
    }//GEN-LAST:event_update1ActionPerformed

    private void btnCheckActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCheckActionPerformed
        // TODO add your handling code here:

        int selectedRowIndex = tblPerson.getSelectedRow();
        Person selectPerson = personDirectory.getListOfPerson().get(selectedRowIndex);
        int bloodPressure = Integer.parseInt(txtBloodPressure.getText());
        VitalSigns vitalSigns = new VitalSigns();
        vitalSigns.setBloodPressure(bloodPressure);
        House housing = new House();

        Patient patient = new Patient();
        boolean isStable = patient.isPatientNormal(selectPerson.getAgeOfPerson());

        if (isStable == false) {
            patientDirectory.addPatient(patient);
            patient.setPatientD(String.valueOf(selectPerson.getIdOfPerson()));
            patient.setNameOfPerson(selectPerson.getNameOfPerson());
            patient.setAgeOfPerson(selectPerson.getAgeOfPerson());
            patient.setIdOfPerson(selectPerson.getIdOfPerson());
            patient.setVitalSigns(vitalSigns);
            displayPatientTableDetails();
        }

        Encounter encounter = new Encounter(vitalSigns);
        encounterHistory.addEncounter(encounter);
        encounter.setPatientID(patient.getPatientD());
        encounter.setDateOfVisit(LocalDateTime.now());
        encounter.setIsStable(patient.isPatientNormal(selectPerson.getAgeOfPerson()));
        encounter.setVitalSigns(vitalSigns);
    }//GEN-LAST:event_btnCheckActionPerformed

    private void tblPersonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblPersonMouseClicked
        // TODO add your handling code here:
        int selectedRowIndex = tblPerson.getSelectedRow();

        Person selectPerson = personDirectory.getListOfPerson().get(selectedRowIndex);

        txtAge.setText(String.valueOf(selectPerson.getAgeOfPerson()));
        txtName.setText(selectPerson.getNameOfPerson());
        txtAddress.setText(selectPerson.getHouse().getStreetName());
        txtZipCode.setText(String.valueOf(selectPerson.getHouse().getZipCode()));
        ddCity.setSelectedItem(selectPerson.getHouse().getNameOfCity());
        ddCommunity.setSelectedItem(selectPerson.getHouse().getNameOfCommunity());
        ddHouseNumber.setSelectedItem(selectPerson.getHouse().getApartmentNumber());
    }//GEN-LAST:event_tblPersonMouseClicked

    private void clearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearActionPerformed
        // TODO add your handling code here:
    
        txtAge.setText("");
        txtName.setText("");
        txtAddress.setText("");
        txtZipCode.setText("");
        ddHouseNumber.setSelectedIndex(0);
        ddCommunity.setSelectedIndex(0);
        ddCity.setSelectedIndex(0);
    }//GEN-LAST:event_clearActionPerformed

    private void updateBtn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateBtn1ActionPerformed
        // TODO add your handling code here:
        
        int selectedRowIndex = tblPatientHistory.getSelectedRow();
        DefaultTableModel model = (DefaultTableModel) tblPatientHistory.getModel();
        model.setValueAt(bpTxt.getText(), selectedRowIndex, 1);
        model.setValueAt(heartRateTxt1.getText(), selectedRowIndex, 2);

    }//GEN-LAST:event_updateBtn1ActionPerformed

    private void createBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createBtnActionPerformed
        // TODO add your handling code here:
        ViewJPanel viewPane = new ViewJPanel(personDirectory, patientDirectory, encounterHistory, jSplitPane1, hospitalDirectory,doctorDirectory);
        jSplitPane1.setRightComponent(viewPane);
    }//GEN-LAST:event_createBtnActionPerformed

    private void bpTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bpTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_bpTxtActionPerformed

    private void ddCommunity2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ddCommunity2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ddCommunity2ActionPerformed

    private void ddCity2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ddCity2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ddCity2ActionPerformed

    private void heartRateTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_heartRateTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_heartRateTxtActionPerformed

    private void heartRateTxt1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_heartRateTxt1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_heartRateTxt1ActionPerformed

    private void tblPatientHistoryMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblPatientHistoryMouseClicked
        // TODO add your handling code here:
        int selectedRowIndex = tblPatientHistory.getSelectedRow();

        Encounter selectEncounter = encounterHistory.getListOfEncounter().get(selectedRowIndex);

        bpTxt.setText(String.valueOf(selectEncounter.getVitalSigns().getBloodPressure()));
        heartRateTxt1.setText(String.valueOf(selectEncounter.getVitalSigns().getHeartRate()));
    }//GEN-LAST:event_tblPatientHistoryMouseClicked

    private void displayPhotoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_displayPhotoActionPerformed
        // TODO add your handling code here:
        JFileChooser fileChoose = new JFileChooser();
        FileNameExtensionFilter filter = new FileNameExtensionFilter("Supports 3 extensions", "jpg", "jpeg", "png");
        fileChoose.setFileFilter(filter);
        int select = fileChoose.showOpenDialog(null);

        if (select == JFileChooser.APPROVE_OPTION) {
            File file = fileChoose.getSelectedFile();
            String getImage = file.getAbsolutePath();
            ImageIcon img = new ImageIcon(getImage);

            Image imgFit = img.getImage();
            Image imageFit = imgFit.getScaledInstance(uploadPhoto.getWidth(), uploadPhoto.getHeight(), Image.SCALE_SMOOTH);
            ImageIcon format = new ImageIcon(imageFit);
            uploadPhoto.setIcon(format);
        }
    }//GEN-LAST:event_displayPhotoActionPerformed

    private void displayPhoto1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_displayPhoto1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_displayPhoto1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel HospitalnameLbl;
    private javax.swing.JLabel addDocLbl;
    private javax.swing.JLabel bp;
    private javax.swing.JLabel bp1;
    private javax.swing.JTextField bpTxt;
    private javax.swing.JButton btnCheck;
    private javax.swing.JLabel cityLbl;
    private javax.swing.JLabel cityLbl1;
    private javax.swing.JButton clear;
    private javax.swing.JButton clear1;
    private javax.swing.JButton clear2;
    private javax.swing.JButton create1;
    private javax.swing.JButton create2;
    private javax.swing.JButton createBtn;
    private javax.swing.JButton createDoctorBtn;
    private javax.swing.JComboBox<String> ddCity;
    private javax.swing.JComboBox<String> ddCity1;
    private javax.swing.JComboBox<String> ddCity2;
    private javax.swing.JComboBox<String> ddCommunity;
    private javax.swing.JComboBox<String> ddCommunity1;
    private javax.swing.JComboBox<String> ddCommunity2;
    private javax.swing.JComboBox<String> ddHouseNumber;
    private javax.swing.JButton displayPhoto;
    private javax.swing.JButton displayPhoto1;
    private javax.swing.JTextField doctorName;
    private javax.swing.JLabel doctorNameLbl;
    private javax.swing.JPanel doctorPanel;
    private javax.swing.JPanel doctorPanel1;
    private javax.swing.JPanel encounterPanel;
    private javax.swing.JLabel heartRateLbl;
    private javax.swing.JTextField heartRateTxt;
    private javax.swing.JTextField heartRateTxt1;
    private javax.swing.JComboBox<String> hospitalDropdown;
    private javax.swing.JComboBox<String> hospitalDropdown1;
    private javax.swing.JLabel hospitalLbl;
    private javax.swing.JLabel hospitalLbl1;
    private javax.swing.JLabel hospitalLbl2;
    private javax.swing.JPanel hospitalPanel;
    private javax.swing.JLabel hospitalPortalLbl;
    private javax.swing.JTable hospitalTable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JLabel lblAddress;
    private javax.swing.JLabel lblAge;
    private javax.swing.JLabel lblBloodPressure;
    private javax.swing.JLabel lblCity;
    private javax.swing.JLabel lblCommunity;
    private javax.swing.JLabel lblHouseNumber;
    private javax.swing.JLabel lblName;
    private javax.swing.JLabel lblZipCode;
    private javax.swing.JPanel patientPanel;
    private javax.swing.JTable patientTbl;
    private javax.swing.JTable tblDoctor;
    private javax.swing.JTable tblPatientHistory;
    private javax.swing.JTable tblPerson;
    private javax.swing.JTextField txtAddress;
    private javax.swing.JTextField txtAge;
    private javax.swing.JTextField txtBloodPressure;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtZipCode;
    private javax.swing.JButton update1;
    private javax.swing.JButton update2;
    private javax.swing.JButton updateBtn;
    private javax.swing.JButton updateBtn1;
    private javax.swing.JLabel uploadPhoto;
    private javax.swing.JLabel uploadPhoto1;
    // End of variables declaration//GEN-END:variables
    
    private void displayPersonTableDetails() {
        DefaultTableModel tblmodel = (DefaultTableModel) tblPerson.getModel();
        tblmodel.setRowCount(0);
        for (Person person : personDirectory.getListOfPerson()) {
            Object[] row = new Object[10];
            row[0] = person.getNameOfPerson();
            row[1] = person.getAgeOfPerson();
            row[2] = person.getHouse().getNameOfCity();
            row[3] = person.getHouse().getNameOfCommunity();
            row[4] = person.getIdOfPerson();
            row[5] = person.getHouse().getApartmentNumber();
            row[6] = person.getHouse().getStreetName();
            row[7] = person.getHouse().getZipCode();
            tblmodel.addRow(row);
        }
    }

    private void displayDoctorTableDetails() {
        DefaultTableModel tblmodel = (DefaultTableModel) tblDoctor.getModel();
        tblmodel.setRowCount(0);
        //System.out.print(doctorDirectory.getListOfDoctors());

        Object[] row = new Object[5];
        for (Doctor doc : doctorDirectory.getListOfDoctors()) {
            row[0] = doc.getDoctorId();
            row[1] = doc.getDoctorName();
            row[2] = doc.getHospital().getHospitalName();
            row[3] = doc.getHospital().getCommunity();
            row[4] = doc.getHospital().getCity();
            tblmodel.addRow(row);
        }
    }
    
    private void displayHospitalTableDetails() {
        DefaultTableModel tblmodel = (DefaultTableModel) hospitalTable.getModel();
        tblmodel.setRowCount(0);
        System.out.print(hospitalDirectory.getListOfHospital());

        
        for (Hospital hospital : hospitalDirectory.getListOfHospital()) {
            Object[] row = new Object[4];
            row[0] = hospital.getHospitalId();
            row[1] = hospital.getHospitalName();
            row[2] = hospital.getCommunity();
            row[3] = hospital.getCity();
            tblmodel.addRow(row);
        }
    }
    
    private void displayPatientTableDetails() {
        DefaultTableModel tblmodel = (DefaultTableModel) patientTbl.getModel();
        tblmodel.setRowCount(0);
        for (Patient patient : patientDirectory.getListOfPatients()) {
            Object[] row = new Object[10];
            row[0] = patient.getIdOfPerson();
            row[1] = patient.getNameOfPerson();
            row[2] = patient.getAgeOfPerson();
            row[3] = patient.getHouse().getNameOfCity();
            row[4] = patient.getHouse().getNameOfCommunity();
            row[5] = patient.getIdOfPerson();
            row[6] = patient.getHouse().getApartmentNumber();
            row[7] = patient.getHouse().getStreetName();
            row[8] = patient.getHouse().getZipCode();
            tblmodel.addRow(row);
        }
    }
    
     private void displayEncounterHistory(){
        DefaultTableModel model = (DefaultTableModel) tblPatientHistory.getModel();
        model.setRowCount(0);
        for(Encounter encounter: encounterHistory.getListOfEncounter()){
            Object[]row = new Object[10];
            row[0] = encounter.getPatientID();
            row[1] = encounter.getVitalSigns().getBloodPressure();
            row[2] = encounter.getVitalSigns().getHeartRate();
            row[3] = encounter.isIsStable() ? "Healthy" : "Not Healthy";
            row[4] = encounter.getDateOfVisit();
            model.addRow(row);
        }
    }
     
         
    private int getUniqueIdHospital() {
        
        int randomPIN = (int)(Math.random()*90000)+10000;
        for(Hospital hospital : hospitalDirectory.getListOfHospital()){
            if(hospital.getHospitalId()== randomPIN){
            getUniqueIdHospital();
            }
        }
        return randomPIN;
    }
    
    private int getUniqueIdDoctor() {
        
        int randomPIN = (int)(Math.random()*90000)+10000;
        for(Doctor doctor : doctorDirectory.getListOfDoctors()){
            if(doctor.getDoctorId()== randomPIN){
            getUniqueIdDoctor();
            }
        }
        return randomPIN;
    }
}
